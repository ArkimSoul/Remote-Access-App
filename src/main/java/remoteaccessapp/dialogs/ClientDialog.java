package remoteaccessapp.dialogs;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import remoteaccessapp.Instance;
import remoteaccessapp.client.MouseMessage;
import remoteaccessapp.utils.ScreenRecorder;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.awt.image.BufferedImage;

public class ClientDialog extends JDialog {
    private static Instance instance;
    private JPanel contentPane;
    private JLabel screenLabel;
    private JPanel screenPanel;

    private float x_mul = 0.0f;
    private float y_mul = 0.0f;

    public ClientDialog(Instance inst) {
        instance = inst;

        setContentPane(contentPane);

        Dimension size_dim = new Dimension(640, 480);

        setPreferredSize(size_dim);
        setSize(size_dim);
        setResizable(true);
        setLocationRelativeTo(null);
    }

    public void startSession() {
        setVisible(true);
        new Thread(() -> {
            screenLabel.addMouseListener(screenMouseListener);
            while (instance.client.isConnected()) {
                updateScreen();
            }
        }).start();
    }

    private void updateScreen() {
        try {
            ImageIcon scaledFrame = scaleFrame(instance.client.frame);
            screenLabel.setIcon(scaledFrame);
        } catch (NullPointerException e) {

        }
    }

    private ImageIcon scaleFrame(BufferedImage image) {
        int originalWidth = image.getWidth();
        int originalHeight = image.getHeight();
        double widthRatio = (double) screenPanel.getWidth() / originalWidth;
        double heightRatio = (double) screenPanel.getHeight() / originalHeight;
        double scaleRatio = Math.min(widthRatio, heightRatio);
        int newWidth = (int) (originalWidth * scaleRatio);
        int newHeight = (int) (originalHeight * scaleRatio);

        Image scaledImage = image.getScaledInstance(newWidth, newHeight, Image.SCALE_SMOOTH);

        x_mul = originalWidth / (float) newWidth;
        y_mul = originalHeight / (float) newHeight;

        return new ImageIcon(scaledImage);
    }

    private MouseListener screenMouseListener = new MouseAdapter() {
        @Override
        public void mousePressed(MouseEvent e) {
            instance.client.sendMouseMessage(new MouseMessage((int) (e.getX() * x_mul), (int) (e.getY() * y_mul), e.getButton(), true));
        }

        @Override
        public void mouseReleased(MouseEvent e) {
            instance.client.sendMouseMessage(new MouseMessage((int) (e.getX() * x_mul), (int) (e.getY() * y_mul), e.getButton(), false));
        }
    };

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new GridBagLayout());
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 2, new Insets(4, 6, 4, 6), -1, -1));
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        contentPane.add(panel1, gbc);
        final JLabel label1 = new JLabel();
        label1.setText("Connected");
        panel1.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        panel1.add(spacer1, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        screenPanel = new JPanel();
        screenPanel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        contentPane.add(screenPanel, gbc);
        screenLabel = new JLabel();
        screenLabel.setHorizontalAlignment(10);
        screenLabel.setText("");
        screenPanel.add(screenLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }

}
